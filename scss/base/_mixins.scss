@function prc($pxOne, $pxTwo) {
    $result: math.div($pxOne, $pxTwo) * 100%;
    @return $result;
}

@function rem($px) {
    $result: math.div($px, 16)+rem;
    @return $result;
}

@function em($pxOne, $pxTwo: 16) {
    $result: math.div($pxOne, $pxTwo)+em;
    @return $result;
}

@function adaptiv-px($pcSize, $mobSize, $min: $minWidth) {
    $addSize: $pcSize - $mobSize;
    $maxWidth: $maxWidth - $min;
    $result: calc(#{$mobSize + px} + #{$addSize} * ((100vw - #{$min}px) / #{$maxWidth}));
    @return $result;
}

@function adaptiv-rem($pcSize, $mobSize, $min: $minWidth) {
    $addSize: $pcSize - $mobSize;
    $maxWidth: $maxWidth - $min;
    $result: calc(#{$mobSize / 16 + rem} + #{$addSize / 16} * ((100vw - #{$min}px) / #{$maxWidth / 16}));
    @return $result;
}

@function adaptiv-em($pcSize, $mobSize, $relSize, $min: $minWidth) {
    $addSize: $pcSize - $mobSize;
    $maxWidth: $maxWidth - $min;
    $result: calc(#{$mobSize / $relSize + em} + #{$addSize / $relSize} * ((100vw - #{$min}px) / #{$maxWidth / $relSize}));
    @return $result;
}

@mixin adaptiv-prop($property, $pcSize, $mobSize, $min: $minWidth) {
    $addSize: $pcSize - $mobSize;
    $maxWidth: $maxWidth - $min;
    #{$property}: calc(#{$mobSize + px} + #{$addSize} * ((100vw - #{$min}px) / #{$maxWidth}));
}

@mixin adaptiv-prop-rem($property, $pcSize, $mobSize, $min: $minWidth) {
    $addSize: $pcSize - $mobSize;
    $maxWidth: $maxWidth - $min;
    #{$property}: calc(#{$mobSize / 16 + rem} + #{$addSize / 16} * ((100vw - #{$min}px) / #{$maxWidth / 16}));
}

@mixin adaptiv-prop-em($property, $pcSize, $mobSize, $relSize, $min: $minWidth) {
    $addSize: $pcSize - $mobSize;
    $maxWidth: $maxWidth - $min;
    #{$property}: calc(#{$mobSize / $relSize + em} + #{$addSize / $relSize} * ((100vw - #{$min}px) / #{$maxWidth / $relSize}));
}